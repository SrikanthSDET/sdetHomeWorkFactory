!SESSION 2023-08-22 07:48:13.501 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file D:\SDET\workspace\.metadata\.bak_1.log
Created Time: 2023-08-22 21:14:24.534

!ENTRY org.eclipse.jdt.ui 4 0 2023-08-22 21:14:24.535
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:14:24.571
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}

	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}

	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots == 3)
				return 2 == n;

			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) =< n;
			else
				return (emptyPlots / 2) + 1 = n;
		}

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			// flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			// if (flowerPlots == 1 && (i == 0 || i == 1))
			// continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots - 1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		// if (emptyPlots == 0)
		// return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			// if (nonEmptyPlots == 0)
			emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-08-22 21:14:24.571
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-08-22 21:14:24.572
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:14:25.191
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}

	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}

	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots == 3)
				return 2 == n;

			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) =< n;
			else
				return (emptyPlots / 2) + 1 == n;
		}

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			// flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			// if (flowerPlots == 1 && (i == 0 || i == 1))
			// continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots - 1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		// if (emptyPlots == 0)
		// return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			// if (nonEmptyPlots == 0)
			emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-08-22 21:14:25.192
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-08-22 21:14:25.192
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:14:25.202
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}

	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}

	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots == 3)
				return 2 == n;

			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) =< n;
			else
				return (emptyPlots / 2) + 1 == n;
		}

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			// flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			// if (flowerPlots == 1 && (i == 0 || i == 1))
			// continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots - 1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		// if (emptyPlots == 0)
		// return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			// if (nonEmptyPlots == 0)
			emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-08-22 21:14:25.203
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-08-22 21:14:25.204
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:14:25.806
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}

	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}

	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots == 3)
				return 2 == n;

			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) = n;
			else
				return (emptyPlots / 2) + 1 == n;
		}

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			// flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			// if (flowerPlots == 1 && (i == 0 || i == 1))
			// continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots - 1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		// if (emptyPlots == 0)
		// return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			// if (nonEmptyPlots == 0)
			emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-08-22 21:14:25.808
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-08-22 21:14:25.808
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:14:25.887
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}

	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}

	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots == 3)
				return 2 == n;

			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) = n;
			else
				return (emptyPlots / 2) + 1 == n;
		}

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			// flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			// if (flowerPlots == 1 && (i == 0 || i == 1))
			// continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots - 1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		// if (emptyPlots == 0)
		// return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			// if (nonEmptyPlots == 0)
			emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-08-22 21:14:25.888
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-08-22 21:14:25.889
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:14:41.318
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:14:41.320
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:15:15.056
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:15:15.059
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:15:28.586
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}
	
	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}
	
	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0,0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if(emptyPlots==3) return 2 == n;
			
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) = n;
			else
				return (emptyPlots / 2) + 1 <= n;
		}
			
			

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			//flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			//if (flowerPlots == 1 && (i == 0 || i == 1))
				//continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots-1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		//if (emptyPlots == 0)
			//return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			//if (nonEmptyPlots == 0)
				emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-08-22 21:15:28.587
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-08-22 21:15:28.588
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-08-22 21:15:28.634
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package august.dsa;

import org.junit.Assert;
import org.junit.Test;

public class CanPlaceFlowers_605 {
	@Test
	public void Test1() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 0, 1 }, 1));

	}

	@Test
	public void Test2() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0 }, 3));

	}

	@Test
	public void Test3() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 0, 0, 0 }, 4));

	}

	@Test
	public void Test4() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0, 0 }, 2));

	}

	@Test
	public void Test5() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 0, 0 }, 1));

	}

	@Test
	public void Test6() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 1, 0, 1, 0 }, 0));

	}

	@Test
	public void Test7() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 }, 3));

	}

	@Test
	public void Test8() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 1 }, 1));
	}

	@Test
	public void Test9() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 1));
	}

	@Test
	public void Test10() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0 }, 0));
	}

	@Test
	public void Test11() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 1 }, 0));
	}

	@Test
	public void Test12() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 1, 0, 0 }, 1));
	}

	@Test
	public void Test13() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 1 }, 1));
	}

	@Test
	public void Test14() {
		Assert.assertTrue(!findCanPlotFlower(new int[] { 0, 0, 1, 0 }, 2));
	}

	@Test
	public void Test15() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0, 0, 1 }, 2));
	}
	
	@Test
	public void Test16() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 2));
	}

	@Test
	public void Test17() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0 }, 1));
	}
	
	@Test
	public void Test18() {
		Assert.assertTrue(findCanPlotFlower(new int[] { 0, 0, 0,0 }, 1));
	}

	public boolean findCanPlotFlower(int[] flowerbed, int n) {
		int flowerPlots = 0, emptyPlots = 0, fullEmptyCheck = 0, nonEmptyPlots = 0;

		if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 1) {
			return false;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 1) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 0 && n == 0) {
			return true;
		} else if (flowerbed.length == 1 && flowerbed[0] == 1 && n == 0) {
			return true;
		}

		for (int i = 0; i < flowerbed.length; i++) {
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				nonEmptyPlots++;
			}
		}

		if (emptyPlots == flowerbed.length) {
			if(emptyPlots==3) return 2 == n;
			
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) = n;
			else
				return (emptyPlots / 2) + 1 <= n;
		}
			
			

		if (nonEmptyPlots == flowerbed.length)
			return false;

		if (flowerbed[0] == 0 && flowerbed[1] == 0) {
			//flowerPlots++;
			fullEmptyCheck++;
		}

		emptyPlots = 0;
		for (int i = 0; i < flowerbed.length; i++) {
			//if (flowerPlots == 1 && (i == 0 || i == 1))
				//continue;
			if (flowerbed[i] == 0) {
				emptyPlots++;
			} else {
				// nonEmptyPlots++;
				if (emptyPlots == 1) {
					emptyPlots = 0;
					// flowerPlots++;
					continue;
				}

				if (emptyPlots % 2 == 0) {
					flowerPlots += (emptyPlots-1) / 2;
				} else {
					flowerPlots += (emptyPlots) / 2;
				}
				emptyPlots = 0;
			}

		}

		//if (emptyPlots == 0)
			//return flowerPlots == n;

		if (fullEmptyCheck == 1 /* && (nonEmptyPlots == 0 || nonEmptyPlots == 1) */) {
			//if (nonEmptyPlots == 0)
				emptyPlots += 2;
		}

		if (emptyPlots == flowerbed.length) {
			if (emptyPlots % 2 == 0)
				return (emptyPlots / 2) == n;
			else
				return (emptyPlots / 2) + 1 == n;
		} else {

			if (emptyPlots % 2 == 0) {
				// flowerPlots=0;
				flowerPlots += (emptyPlots / 2);
			} else
				flowerPlots += (emptyPlots / 2);
		}

		return flowerPlots >= n;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-08-22 21:15:28.635
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-08-22 21:15:28.635
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3038)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3109)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:15:35.700
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:15:35.703
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:16:25.622
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:16:25.624
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:18:28.517
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:18:28.520
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:18:37.424
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:18:37.427
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:53:38.396
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:53:38.400
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:54:39.797
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 21:54:39.800
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 22:53:24.221
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2023-08-22 22:53:24.224
!MESSAGE Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
